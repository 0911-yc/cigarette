<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xr.smoke.mapper.PostRiskMapper">
  <resultMap id="BaseResultMap" type="com.xr.smoke.entity.PostRisk">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="postRiskid" jdbcType="INTEGER" property="postriskid" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="departmentId" jdbcType="INTEGER" property="departmentid" />
    <result column="PostId" jdbcType="INTEGER" property="postid" />
    <result column="project" jdbcType="VARCHAR" property="project" />
    <result column="describe" jdbcType="VARCHAR" property="describe" />
    <result column="mayOccur" jdbcType="VARCHAR" property="mayoccur" />
    <result column="consequence" jdbcType="VARCHAR" property="consequence" />
    <result column="LeastValue" jdbcType="VARCHAR" property="leastvalue" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="precautionaryMeasurse" jdbcType="VARCHAR" property="precautionarymeasurse" />
    <result column="creationTime" jdbcType="TIMESTAMP" property="creationtime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, postRiskid, year, departmentId, PostId, project, describe, mayOccur, consequence, 
    LeastValue, grade, precautionaryMeasurse, creationTime, creator, state
  </sql>
  <select id="selectByExample" parameterType="com.xr.smoke.entity.PostRiskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from postRisk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from postRisk
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from postRisk
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xr.smoke.entity.PostRiskExample">
    delete from postRisk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xr.smoke.entity.PostRisk">
    insert into postRisk (id, postRiskid, year, 
      departmentId, PostId, project, 
      describe, mayOccur, consequence, 
      LeastValue, grade, precautionaryMeasurse, 
      creationTime, creator, state
      )
    values (#{id,jdbcType=INTEGER}, #{postriskid,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, 
      #{departmentid,jdbcType=INTEGER}, #{postid,jdbcType=INTEGER}, #{project,jdbcType=VARCHAR}, 
      #{describe,jdbcType=VARCHAR}, #{mayoccur,jdbcType=VARCHAR}, #{consequence,jdbcType=VARCHAR}, 
      #{leastvalue,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER}, #{precautionarymeasurse,jdbcType=VARCHAR}, 
      #{creationtime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xr.smoke.entity.PostRisk">
    insert into postRisk
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="postriskid != null">
        postRiskid,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="departmentid != null">
        departmentId,
      </if>
      <if test="postid != null">
        PostId,
      </if>
      <if test="project != null">
        project,
      </if>
      <if test="describe != null">
        describe,
      </if>
      <if test="mayoccur != null">
        mayOccur,
      </if>
      <if test="consequence != null">
        consequence,
      </if>
      <if test="leastvalue != null">
        LeastValue,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="precautionarymeasurse != null">
        precautionaryMeasurse,
      </if>
      <if test="creationtime != null">
        creationTime,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="postriskid != null">
        #{postriskid,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="postid != null">
        #{postid,jdbcType=INTEGER},
      </if>
      <if test="project != null">
        #{project,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="mayoccur != null">
        #{mayoccur,jdbcType=VARCHAR},
      </if>
      <if test="consequence != null">
        #{consequence,jdbcType=VARCHAR},
      </if>
      <if test="leastvalue != null">
        #{leastvalue,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="precautionarymeasurse != null">
        #{precautionarymeasurse,jdbcType=VARCHAR},
      </if>
      <if test="creationtime != null">
        #{creationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xr.smoke.entity.PostRiskExample" resultType="java.lang.Long">
    select count(*) from postRisk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update postRisk
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.postriskid != null">
        postRiskid = #{record.postriskid,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.departmentid != null">
        departmentId = #{record.departmentid,jdbcType=INTEGER},
      </if>
      <if test="record.postid != null">
        PostId = #{record.postid,jdbcType=INTEGER},
      </if>
      <if test="record.project != null">
        project = #{record.project,jdbcType=VARCHAR},
      </if>
      <if test="record.describe != null">
        describe = #{record.describe,jdbcType=VARCHAR},
      </if>
      <if test="record.mayoccur != null">
        mayOccur = #{record.mayoccur,jdbcType=VARCHAR},
      </if>
      <if test="record.consequence != null">
        consequence = #{record.consequence,jdbcType=VARCHAR},
      </if>
      <if test="record.leastvalue != null">
        LeastValue = #{record.leastvalue,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.precautionarymeasurse != null">
        precautionaryMeasurse = #{record.precautionarymeasurse,jdbcType=VARCHAR},
      </if>
      <if test="record.creationtime != null">
        creationTime = #{record.creationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update postRisk
    set id = #{record.id,jdbcType=INTEGER},
      postRiskid = #{record.postriskid,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      departmentId = #{record.departmentid,jdbcType=INTEGER},
      PostId = #{record.postid,jdbcType=INTEGER},
      project = #{record.project,jdbcType=VARCHAR},
      describe = #{record.describe,jdbcType=VARCHAR},
      mayOccur = #{record.mayoccur,jdbcType=VARCHAR},
      consequence = #{record.consequence,jdbcType=VARCHAR},
      LeastValue = #{record.leastvalue,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=INTEGER},
      precautionaryMeasurse = #{record.precautionarymeasurse,jdbcType=VARCHAR},
      creationTime = #{record.creationtime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xr.smoke.entity.PostRisk">
    update postRisk
    <set>
      <if test="postriskid != null">
        postRiskid = #{postriskid,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null">
        departmentId = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="postid != null">
        PostId = #{postid,jdbcType=INTEGER},
      </if>
      <if test="project != null">
        project = #{project,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        describe = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="mayoccur != null">
        mayOccur = #{mayoccur,jdbcType=VARCHAR},
      </if>
      <if test="consequence != null">
        consequence = #{consequence,jdbcType=VARCHAR},
      </if>
      <if test="leastvalue != null">
        LeastValue = #{leastvalue,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="precautionarymeasurse != null">
        precautionaryMeasurse = #{precautionarymeasurse,jdbcType=VARCHAR},
      </if>
      <if test="creationtime != null">
        creationTime = #{creationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xr.smoke.entity.PostRisk">
    update postRisk
    set postRiskid = #{postriskid,jdbcType=INTEGER},
      year = #{year,jdbcType=INTEGER},
      departmentId = #{departmentid,jdbcType=INTEGER},
      PostId = #{postid,jdbcType=INTEGER},
      project = #{project,jdbcType=VARCHAR},
      describe = #{describe,jdbcType=VARCHAR},
      mayOccur = #{mayoccur,jdbcType=VARCHAR},
      consequence = #{consequence,jdbcType=VARCHAR},
      LeastValue = #{leastvalue,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      precautionaryMeasurse = #{precautionarymeasurse,jdbcType=VARCHAR},
      creationTime = #{creationtime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>